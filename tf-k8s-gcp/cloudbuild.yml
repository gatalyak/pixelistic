steps:
  - name: gcr.io/cloud-builders/gcloud
    entrypoint: /bin/bash
    args:
      - "-c"
      - |
        AWS_SECRET_ACCESS_KEY=$(gcloud secrets versions access --secret=AWS_SECRET_ACCESS_KEY latest)
        echo AWS_SECRET_ACCESS_KEY=$AWS_SECRET_ACCESS_KEY
  - name: 'hashicorp/terraform:latest'
    id: Terraform apply
    entrypoint: 'sh'
    args: 
    - '-c'
    - | 
        echo _AWS_SECRET_ACCESS_KEY=$_AWS_SECRET_ACCESS_KEY

        cd tf-k8s-gcp/
        terraform init -input=false
        terraform plan --var-file=stage.tfvars -input=false
  #terraform apply --var-file=stage.tfvars -input=false -auto-approve
  # This step builds the container image.
  - name: 'gcr.io/cloud-builders/docker'
    id: Build Frontend
    args:
    - 'build'
    - '-t'
    - 'gcr.io/$PROJECT_ID/pixelistic_fe:$SHORT_SHA'
    - 'pixelistic_fe'
  - name: 'gcr.io/cloud-builders/docker'
    id: Build Backend
    args:
    - 'build'
    - '-t'
    - 'gcr.io/$PROJECT_ID/pixelistic_be:$SHORT_SHA'
    - 'pixelistic_be'
  # This step pushes the image to Container Registry
  # The PROJECT_ID and SHORT_SHA variables are automatically
  # replaced by Cloud Build.
  - name: 'gcr.io/cloud-builders/docker'
    id: Push Frontend
    args:
    - 'push'
    - 'gcr.io/$PROJECT_ID/pixelistic_fe:$SHORT_SHA'
  - name: 'gcr.io/cloud-builders/docker'
    id: Push Backend
    args:
    - 'push'
    - 'gcr.io/$PROJECT_ID/pixelistic_be:$SHORT_SHA'
   # This step generates the new manifest
  - name: 'gcr.io/cloud-builders/gcloud'
    id: Generate manifests
    entrypoint: /bin/sh
    args:
    - '-c'
    - |
      sed -i "s|__REP_WEB_URI__|gcr.io/$PROJECT_ID/pixelistic_fe:$SHORT_SHA|" pixelistic_fe/manifests/deployment.yml && \
      sed -i "s|__REACT_APP_API_WEB__|$REACT_APP_API_WEB|" pixelistic_fe/manifests/deployment.yml && \
      sed -i "s|__REACT_APP_AWS_S3__|$REACT_APP_AWS_S3|" pixelistic_fe/manifests/deployment.yml && \
      cat pixelistic_fe/manifests/deployment.yml && \       
      sed -i "s|__FRONT_URL__|$FRONT_URL|" pixelistic_be/manifests/deployment.yml && \
      sed -i "s|__REP_API_URI__|gcr.io/$PROJECT_ID/pixelistic_be:$SHORT_SHA|" pixelistic_be/manifests/deployment.yml && \
      sed -i "s|__MONGO_DB__|mongodb://mongo-0.mongo,mongo-1.mongo,mongo-2.mongo:27017/pixelistic?replicaSet=rs0|" pixelistic_be/manifests/deployment.yml && \
      sed -i "s|__AWS_ACCESS_KEY_ID__|$AWS_ACCESS_KEY_ID|" pixelistic_be/manifests/deployment.yml && \
      sed -i "s|__AWS_SECRET_ACCESS_KEY__|$AWS_SECRET_ACCESS_KEY|" pixelistic_be/manifests/deployment.yml && \
      sed -i "s|__AWS_REGION__|$AWS_REGION|" pixelistic_be/manifests/deployment.yml && \
      sed -i "s|__AWS_S3_BUCKET__|$AWS_S3_BUCKET|" pixelistic_be/manifests/deployment.yml && \
      sed -i "s|__EMAIL_USER__|$EMAIL_USER|" pixelistic_be/manifests/deployment.yml && \
      sed -i "s|__EMAIL_PASS__|$EMAIL_PASS|" pixelistic_be/manifests/deployment.yml && \
      cat pixelistic_be/manifests/deployment.yml
  - name: 'gcr.io/cloud-builders/kubectl'
    id: Deploy
    args:
    - 'apply'
    - '-f'
    - 'pixelistic_fe/manifests/deployment.yml'
    - '-f'
    - 'pixelistic_fe/manifests/service.yml'
    - '-f'
    - 'pixelistic_be/manifests/deployment.yml'
    - '-f'
    - 'pixelistic_be/manifests/service.yml'
    env:
    - 'CLOUDSDK_COMPUTE_ZONE=europe-west1'
    - 'CLOUDSDK_CONTAINER_CLUSTER=yg-pix-stage-gke'  